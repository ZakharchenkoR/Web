// <auto-generated />
using System;
using Data.Domain.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Data.Domain.Entities.Country", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ef87c39b-2cc6-407e-b974-edbcf20781ad"),
                            Name = "China"
                        },
                        new
                        {
                            Id = new Guid("cc61583f-4ebd-4b68-8e41-b56822aec84e"),
                            Name = "USA"
                        },
                        new
                        {
                            Id = new Guid("fb13009a-e4d3-4770-8c77-957e78b61802"),
                            Name = "South Korea"
                        });
                });

            modelBuilder.Entity("Data.Domain.Entities.Manufacturer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CountryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Manufacturers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("62d760f0-648a-4ee0-9923-b63effd17b5b"),
                            CountryId = new Guid("cc61583f-4ebd-4b68-8e41-b56822aec84e"),
                            Name = "Iphone"
                        },
                        new
                        {
                            Id = new Guid("e8b5a606-0b3a-4a16-b15d-c6855d91a4ef"),
                            CountryId = new Guid("cc61583f-4ebd-4b68-8e41-b56822aec84e"),
                            Name = "Google"
                        },
                        new
                        {
                            Id = new Guid("f639ccdd-39d5-40b5-98af-d07211f7b61a"),
                            CountryId = new Guid("ef87c39b-2cc6-407e-b974-edbcf20781ad"),
                            Name = "Xiaomi"
                        },
                        new
                        {
                            Id = new Guid("1bea5a7c-03ca-40a4-aad4-7911b69b39fd"),
                            CountryId = new Guid("ef87c39b-2cc6-407e-b974-edbcf20781ad"),
                            Name = "Huawei"
                        },
                        new
                        {
                            Id = new Guid("b12dabf7-4845-4788-b55e-b0d7e3d673fb"),
                            CountryId = new Guid("fb13009a-e4d3-4770-8c77-957e78b61802"),
                            Name = "Samsung"
                        });
                });

            modelBuilder.Entity("Data.Domain.Entities.Model", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<Guid>("ManufacturerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ManufacturerId");

                    b.ToTable("Models");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a85fbe94-7462-4690-ba65-921cc2b7f4e8"),
                            Count = 100,
                            ManufacturerId = new Guid("e8b5a606-0b3a-4a16-b15d-c6855d91a4ef"),
                            Name = "Pixel 2XL",
                            Price = 8200m
                        },
                        new
                        {
                            Id = new Guid("42be4c1c-d92e-4a54-8103-45b57077b44c"),
                            Count = 1000,
                            ManufacturerId = new Guid("e8b5a606-0b3a-4a16-b15d-c6855d91a4ef"),
                            Name = "Pixel 3XL",
                            Price = 14500m
                        },
                        new
                        {
                            Id = new Guid("e813c617-6724-4bd1-bb36-e9c32b71e7fb"),
                            Count = 1000,
                            ManufacturerId = new Guid("e8b5a606-0b3a-4a16-b15d-c6855d91a4ef"),
                            Name = "Pixel 4",
                            Price = 15500m
                        },
                        new
                        {
                            Id = new Guid("3a5558b7-3f4a-492e-b6fe-5d28c9099b35"),
                            Count = 1000,
                            ManufacturerId = new Guid("e8b5a606-0b3a-4a16-b15d-c6855d91a4ef"),
                            Name = "Pixel 4XL",
                            Price = 17500m
                        },
                        new
                        {
                            Id = new Guid("436b8fe4-69dc-4d84-a30f-1696e4a18f4f"),
                            Count = 1000,
                            ManufacturerId = new Guid("62d760f0-648a-4ee0-9923-b63effd17b5b"),
                            Name = "6",
                            Price = 3500m
                        },
                        new
                        {
                            Id = new Guid("d241ba3b-cb36-4415-829a-451232f78cd1"),
                            Count = 1000,
                            ManufacturerId = new Guid("62d760f0-648a-4ee0-9923-b63effd17b5b"),
                            Name = "6S",
                            Price = 4500m
                        },
                        new
                        {
                            Id = new Guid("2380b3b0-a3e6-46bf-adf7-a8451c62ac15"),
                            Count = 1000,
                            ManufacturerId = new Guid("62d760f0-648a-4ee0-9923-b63effd17b5b"),
                            Name = "8",
                            Price = 8000m
                        },
                        new
                        {
                            Id = new Guid("74ef6172-5389-4470-aea4-b40beb27301f"),
                            Count = 1000,
                            ManufacturerId = new Guid("62d760f0-648a-4ee0-9923-b63effd17b5b"),
                            Name = "X",
                            Price = 14000m
                        },
                        new
                        {
                            Id = new Guid("cebee680-2ebf-4620-8a84-5e40e3b516ec"),
                            Count = 1000,
                            ManufacturerId = new Guid("f639ccdd-39d5-40b5-98af-d07211f7b61a"),
                            Name = "Mi 9",
                            Price = 9000m
                        },
                        new
                        {
                            Id = new Guid("366d57df-9f01-4ccf-a46f-fbaf0aa7d07d"),
                            Count = 1000,
                            ManufacturerId = new Guid("f639ccdd-39d5-40b5-98af-d07211f7b61a"),
                            Name = "Mi 10",
                            Price = 25000m
                        },
                        new
                        {
                            Id = new Guid("0b97a35a-d8b7-4704-925a-27cd8a3803a5"),
                            Count = 1000,
                            ManufacturerId = new Guid("1bea5a7c-03ca-40a4-aad4-7911b69b39fd"),
                            Name = "P40 Pro",
                            Price = 28000m
                        },
                        new
                        {
                            Id = new Guid("92d01c5c-5056-49db-a323-a65b1de1b218"),
                            Count = 1000,
                            ManufacturerId = new Guid("b12dabf7-4845-4788-b55e-b0d7e3d673fb"),
                            Name = "P20 Pro",
                            Price = 32000m
                        });
                });

            modelBuilder.Entity("Data.Domain.Entities.Manufacturer", b =>
                {
                    b.HasOne("Data.Domain.Entities.Country", "Country")
                        .WithMany("Manufacturers")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Data.Domain.Entities.Model", b =>
                {
                    b.HasOne("Data.Domain.Entities.Manufacturer", "Manufacturer")
                        .WithMany("Models")
                        .HasForeignKey("ManufacturerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
